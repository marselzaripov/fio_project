import{disconnect as d,getAccount as u,watchAccount as C,connect as l,InjectedConnector as m}from"@wagmi/core";import{CoinbaseWalletConnector as p}from"@wagmi/core/connectors/coinbaseWallet";import{MetaMaskConnector as g}from"@wagmi/core/connectors/metaMask";import{WalletConnectConnector as w}from"@wagmi/core/connectors/walletConnect";import{jsonRpcProvider as f}from"@wagmi/core/providers/jsonRpc";class B{constructor(n,e){this.wagmi={},this.chains=[],this.disconnect=d,this.getAccount=u,this.watchAccount=C,this.wagmi=n,this.chains=e}getDefaultConnectorChainId(n){return n.chains[0].id}getConnectorById(n){const e=this.wagmi.connectors.find(t=>t.id===n);if(!e)throw new Error(`Missing ${n} connector`);return e}async getActiveWalletConnectUri(){return(await this.getConnectorById("walletConnect").getProvider()).connector.uri}async connectWalletConnect(n,e){const t=this.getConnectorById("walletConnect"),o=e??this.getDefaultConnectorChainId(t);async function i(){return new Promise(s=>{t.once("message",async({type:a})=>{if(a==="connecting"){const h=await t.getProvider();n(h.connector.uri),s()}})})}const[r]=await Promise.all([l({connector:t,chainId:o}),i()]);return r}async connectCoinbaseMobile(n,e){const t=this.getConnectorById("coinbaseWallet"),o=e??this.getDefaultConnectorChainId(t);async function i(){return new Promise(s=>{t.once("message",async({type:a})=>{if(a==="connecting"){const h=await t.getProvider();n?.(h.qrUrl),s()}})})}const[r]=await Promise.all([l({connector:t,chainId:o}),i()]);return r}async connectExtension(n,e){const t=this.getConnectorById(n),o=e??this.getDefaultConnectorChainId(t);return await l({connector:t,chainId:o})}}const I="eip155";function M({projectId:c}){return f({rpc:n=>({http:`https://rpc.walletconnect.com/v1/?chainId=${I}:${n.id}&projectId=${c}`})})}function W({appName:c,chains:n}){return[new w({chains:n,options:{qrcode:!1}}),new m({chains:n,options:{shimDisconnect:!0}}),new p({chains:n,options:{appName:c,headlessMode:!0}}),new g({chains:n,options:{shimDisconnect:!0,shimChainChangedDisconnect:!1,UNSTABLE_shimOnConnectSelectAccount:!0}})]}export{B as EthereumClient,W as modalConnectors,M as walletConnectProvider};
//# sourceMappingURL=index.js.map
