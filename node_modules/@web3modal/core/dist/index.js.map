{"version":3,"file":"index.js","sources":["../src/controllers/OptionsCtrl.ts","../src/controllers/ClientCtrl.ts","../src/controllers/ConfigCtrl.ts","../src/utils/ExplorerApi.ts","../src/controllers/ExplorerCtrl.ts","../src/controllers/RouterCtrl.ts","../src/controllers/ModalCtrl.ts","../src/controllers/ToastCtrl.ts","../src/utils/CoreConstants.ts","../src/utils/CoreHelpers.ts","../src/utils/PolyfillUtil.ts"],"sourcesContent":["import { proxy } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  selectedChainId: undefined,\n  chains: undefined,\n  standaloneChains: undefined,\n  standaloneUri: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  setChains(chains?: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setStandaloneChains(standaloneChains: OptionsCtrlState['standaloneChains']) {\n    state.standaloneChains = standaloneChains\n  },\n\n  setStandaloneUri(standaloneUri: OptionsCtrlState['standaloneUri']) {\n    state.standaloneUri = standaloneUri\n  },\n\n  setSelectedChainId(selectedChainId: OptionsCtrlState['selectedChainId']) {\n    state.selectedChainId = selectedChainId\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ClientCtrlState } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ClientCtrlState>({\n  initialized: false,\n  ethereumClient: undefined\n})\n\n// -- controller -- As function to enable correct ssr handling\nexport const ClientCtrl = {\n  setEthereumClient(ethereumClient: ClientCtrlState['ethereumClient']) {\n    if (!state.initialized && ethereumClient) {\n      state.ethereumClient = ethereumClient\n      OptionsCtrl.setChains(ethereumClient.chains)\n      state.initialized = true\n    }\n  },\n\n  client() {\n    if (state.ethereumClient) return state.ethereumClient\n\n    throw new Error('ClientCtrl has no client set')\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState, ConfigOptions } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ConfigCtrlState>({\n  configured: false,\n  projectId: '',\n  theme: isDarkMode() ? 'dark' : 'light',\n  accentColor: 'default',\n  standaloneChains: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigOptions) {\n    if (!config.projectId)\n      throw new Error(\n        'Web3Modal requires projectId that can be obtained at cloud.walletconnect.com'\n      )\n\n    if (config.standaloneChains?.length) OptionsCtrl.setStandaloneChains(config.standaloneChains)\n    Object.assign(state, config)\n    state.configured = true\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingResponse, PageParams } from '../types/controllerTypes'\n\nfunction formatParams(params: PageParams) {\n  const stringParams = Object.fromEntries(\n    Object.entries(params)\n      .filter(([_, value]) => typeof value !== 'undefined' && value !== null && value !== '')\n      .map(([key, value]) => [key, value.toString()])\n  )\n\n  return new URLSearchParams(stringParams).toString()\n}\n\nexport function getExplorerApi() {\n  return {\n    url: 'https://explorer-api.walletconnect.com',\n    projectId: ConfigCtrl.state.projectId\n  }\n}\n\nexport async function fetchWallets(params: PageParams): Promise<ListingResponse> {\n  const { url, projectId } = getExplorerApi()\n  const fetcUrl = `${url}/v3/wallets?projectId=${projectId}&${formatParams(params)}`\n  const fetched = await fetch(fetcUrl)\n\n  return fetched.json()\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, PageParams } from '../types/controllerTypes'\nimport { fetchWallets } from '../utils/ExplorerApi'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  previewWallets: [],\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  subscribe(callback: (newState: ExplorerCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async getPreviewWallets(params: PageParams) {\n    const { listings } = await fetchWallets(params)\n    state.previewWallets = Object.values(listings)\n\n    return state.previewWallets\n  },\n\n  async getRecomendedWallets() {\n    const { listings } = await fetchWallets({ page: 1, entries: 6 })\n    state.recomendedWallets = Object.values(listings)\n  },\n\n  async getPaginatedWallets(params: PageParams) {\n    const { page, search } = params\n    const { listings: listingsObj, total } = await fetchWallets(params)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) state.data = data\n      state.history.push(view)\n    }\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  open(options?: { uri: string; standaloneChains?: string[] }) {\n    const { chains } = OptionsCtrl.state\n    if (chains?.length ? chains.length > 1 : false) RouterCtrl.replace('SelectNetwork')\n    else RouterCtrl.replace('ConnectWallet')\n    if (typeof options?.uri === 'string') OptionsCtrl.setStandaloneUri(options.uri)\n    if (options?.standaloneChains?.length) OptionsCtrl.setStandaloneChains(options.standaloneChains)\n    state.open = true\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","export const WALLETCONNECT_DEEPLINK_CHOICE = 'WALLETCONNECT_DEEPLINK_CHOICE'\n","import { WALLETCONNECT_DEEPLINK_CHOICE } from './CoreConstants'\n\nexport const CoreHelpers = {\n  isCoinbaseExtension() {\n    return window.coinbaseWalletExtension\n  },\n\n  isMobile() {\n    return Boolean(\n      window.matchMedia('(pointer:coarse)').matches ||\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n    )\n  },\n\n  isEmptyObject(value: unknown) {\n    return (\n      Object.getPrototypeOf(value) === Object.prototype &&\n      Object.getOwnPropertyNames(value).length === 0 &&\n      Object.getOwnPropertySymbols(value).length === 0\n    )\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string) {\n    const plainAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${plainAppUrl}://wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string) {\n    let plainAppUrl = appUrl\n    if (appUrl.endsWith('/')) plainAppUrl = appUrl.slice(0, -1)\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${plainAppUrl}/wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target = '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(WALLETCONNECT_DEEPLINK_CHOICE)\n  },\n\n  isNull<T>(value: T | null): value is null {\n    return value === null\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) window.Buffer = Buffer\n  if (!window.global) window.global = window\n  // @ts-expect-error minimal process\n  if (!window.process) window.process = { env: {} }\n}\n"],"names":["state","proxy","OptionsCtrl","chains","standaloneChains","standaloneUri","selectedChainId","ClientCtrl","ethereumClient","isDarkMode","ConfigCtrl","callback","valtioSub","config","_a","formatParams","params","stringParams","_","value","key","getExplorerApi","fetchWallets","url","projectId","fetcUrl","ExplorerCtrl","listings","page","search","listingsObj","total","type","RouterCtrl","view","data","last","ModalCtrl","options","ToastCtrl","message","variant","WALLETCONNECT_DEEPLINK_CHOICE","CoreHelpers","appUrl","wcUri","name","plainAppUrl","encodedWcUrl","miliseconds","resolve","href","target","Buffer"],"mappings":"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"}