{
  "version": 3,
  "sources": ["../../proxy-compare/src/index.ts", "../../valtio/esm/vanilla.mjs", "../../@web3modal/core/src/controllers/OptionsCtrl.ts", "../../@web3modal/core/src/controllers/ClientCtrl.ts", "../../@web3modal/core/src/controllers/ConfigCtrl.ts", "../../@web3modal/core/src/utils/ExplorerApi.ts", "../../@web3modal/core/src/controllers/ExplorerCtrl.ts", "../../@web3modal/core/src/controllers/RouterCtrl.ts", "../../@web3modal/core/src/controllers/ModalCtrl.ts", "../../@web3modal/core/src/controllers/ToastCtrl.ts", "../../@web3modal/core/src/utils/CoreConstants.ts", "../../@web3modal/core/src/utils/CoreHelpers.ts", "../../@web3modal/core/src/utils/PolyfillUtil.ts"],
  "sourcesContent": ["// symbols\nconst OWN_KEYS_SYMBOL = Symbol();\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst FROZEN_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\n\n// function to create a new bare proxy\nlet newProxy = <T extends object>(\n  target: T,\n  handler: ProxyHandler<T>,\n) => new Proxy(target, handler);\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// check if frozen\nconst isFrozen = (obj: object) => (\n  Object.isFrozen(obj) || (\n    // Object.isFrozen() doesn't detect non-writable properties\n    // See: https://github.com/dai-shi/proxy-compare/pull/8\n    Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n      (descriptor) => !descriptor.writable,\n    )\n  )\n);\n\n// copy frozen object\nconst unfrozenCache = new WeakMap<object, object>();\nconst unfreeze = <T extends object>(obj: T): T => {\n  let unfrozen = unfrozenCache.get(obj);\n  if (!unfrozen) {\n    if (Array.isArray(obj)) {\n      // Arrays need a special way to copy\n      unfrozen = Array.from(obj);\n    } else {\n      // For non-array objects, we create a new object keeping the prototype\n      // with changing all configurable options (otherwise, proxies will complain)\n      const descriptors = Object.getOwnPropertyDescriptors(obj);\n      Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n      unfrozen = Object.create(getProto(obj), descriptors);\n    }\n    unfrozenCache.set(obj, unfrozen as object);\n  }\n  return unfrozen as T;\n};\n\ntype Affected = WeakMap<object, Set<string | symbol>>;\ntype ProxyHandlerState<T extends object> = {\n  readonly [FROZEN_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object> | undefined;\n  [AFFECTED_PROPERTY]?: Affected;\n}\ntype ProxyCache<T extends object> = WeakMap<\n  object,\n  readonly [ProxyHandler<T>, ProxyHandlerState<T>]\n>;\n\nconst createProxyHandler = <T extends object>(origObj: T, frozen: boolean) => {\n  const state: ProxyHandlerState<T> = {\n    [FROZEN_PROPERTY]: frozen,\n  };\n  let trackObject = false; // for trackMemo\n  const recordUsage = (key: string | symbol, skipWithOwnKeys?: boolean) => {\n    if (!trackObject) {\n      let used = (state[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = new Set();\n        (state[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      if (!skipWithOwnKeys || !used.has(OWN_KEYS_SYMBOL)) {\n        used.add(key);\n      }\n    }\n  };\n  const recordObjectAsUsed = () => {\n    trackObject = true;\n    (state[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(key);\n      return createProxy(\n        (target as any)[key],\n        (state[AFFECTED_PROPERTY] as Affected),\n        state[PROXY_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed();\n        return true;\n      }\n      // LIMITATION: We simply record the same as `get`.\n      // This means { a: {} } and { a: {} } is detected as changed,\n      // if `'a' in obj` is handled.\n      recordUsage(key);\n      return key in target;\n    },\n    getOwnPropertyDescriptor(target, key) {\n      // LIMITATION: We simply record the same as `get`.\n      // This means { a: {} } and { a: {} } is detected as changed,\n      // if `obj.getOwnPropertyDescriptor('a'))` is handled.\n      recordUsage(key, true);\n      return Object.getOwnPropertyDescriptor(target, key);\n    },\n    ownKeys(target) {\n      recordUsage(OWN_KEYS_SYMBOL);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (frozen) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return [handler, state] as const;\n};\n\nconst getOriginalObject = <T extends object>(obj: T) => (\n  // unwrap proxy\n  (obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj })[GET_ORIGINAL_SYMBOL]\n  // otherwise\n  || obj\n);\n\n/**\n * Create a proxy.\n *\n * This function will create a proxy at top level and proxy nested objects as you access them,\n * in order to keep track of which properties were accessed via get/has proxy handlers:\n *\n * NOTE: Printing of WeakMap is hard to inspect and not very readable\n * for this purpose you can use the `affectedToPathList` helper.\n *\n * @param {object} obj - Object that will be wrapped on the proxy.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that will hold the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [proxyCache] -\n * WeakMap that will help keep referential identity for proxies.\n * @returns {Proxy<object>} - Object wrapped in a proxy.\n *\n * @example\n * import { createProxy } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n * const proxy = createProxy(original, affected);\n *\n * proxy.a // Will mark as used and track its value.\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"a\"\n *\n * proxy.d // Will mark \"d\" as accessed to track and proxy itself ({ e: \"3\" }).\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"d\"\n */\nexport const createProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  const target = getOriginalObject(obj);\n  const frozen = isFrozen(target);\n  let handlerAndState = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (!handlerAndState || handlerAndState[1][FROZEN_PROPERTY] !== frozen) {\n    handlerAndState = createProxyHandler<typeof target>(target, frozen);\n    handlerAndState[1][PROXY_PROPERTY] = newProxy(\n      frozen ? unfreeze(target) : target,\n      handlerAndState[0],\n    );\n    if (proxyCache) {\n      proxyCache.set(target, handlerAndState);\n    }\n  }\n  handlerAndState[1][AFFECTED_PROPERTY] = affected as Affected;\n  handlerAndState[1][PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  return handlerAndState[1][PROXY_PROPERTY] as typeof target;\n};\n\nconst isOwnKeysChanged = (prevObj: object, nextObj: object) => {\n  const prevKeys = Reflect.ownKeys(prevObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return prevKeys.length !== nextKeys.length\n    || prevKeys.some((k, i) => k !== nextKeys[i]);\n};\n\ntype ChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * Compare changes on objects.\n *\n * This will compare the affected properties on tracked objects inside the proxy\n * to check if there were any changes made to it,\n * by default if no property was accessed on the proxy it will attempt to do a\n * reference equality check for the objects provided (Object.is(a, b)). If you access a property\n * on the proxy, then isChanged will only compare the affected properties.\n *\n * @param {object} prevObj - The previous object to compare.\n * @param {object} nextObj - Object to compare with the previous one.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that holds the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [cache] -\n * WeakMap that holds a cache of the comparisons for better performance with repetitive comparisons,\n * and to avoid infinite loop with circular structures.\n * @returns {boolean} - Boolean indicating if the affected property on the object has changed.\n *\n * @example\n * import { createProxy, isChanged } from 'proxy-compare';\n *\n * const obj = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(obj, affected);\n *\n * proxy.a\n *\n * isChanged(obj, { a: \"1\" }, affected) // false\n *\n * proxy.a = \"2\"\n *\n * isChanged(obj, { a: \"1\" }, affected) // true\n */\n\nexport const isChanged = (\n  prevObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n): boolean => {\n  if (Object.is(prevObj, nextObj)) {\n    return false;\n  }\n  if (!isObject(prevObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(getOriginalObject(prevObj));\n  if (!used) return true;\n  if (cache) {\n    const hit = (cache as ChangedCache).get(prevObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as ChangedCache).set(prevObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key of used) {\n    const c = key === OWN_KEYS_SYMBOL ? isOwnKeysChanged(prevObj, nextObj)\n      : isChanged(\n        (prevObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n      );\n    if (c === true || c === false) changed = c;\n    if (changed) break;\n  }\n  if (changed === null) changed = true;\n  if (cache) {\n    cache.set(prevObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: changed,\n    });\n  }\n  return changed;\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n/**\n * Unwrap proxy to get the original object.\n *\n * Used to retrieve the original object used to create the proxy instance with `createProxy`.\n *\n * @param {Proxy<object>} obj -  The proxy wrapper of the originial object.\n * @returns {object | null} - Return either the unwrapped object if exists.\n *\n * @example\n * import { createProxy, getUntracked } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n * const originalFromProxy = getUntracked(proxy)\n *\n * Object.is(original, originalFromProxy) // true\n * isChanged(original, originalFromProxy, affected) // false\n */\nexport const getUntracked = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n/**\n * Mark object to be tracked.\n *\n * This function marks an object that will be passed into `createProxy`\n * as marked to track or not. By default only Array and Object are marked to track,\n * so this is useful for example to mark a class instance to track or to mark a object\n * to be untracked when creating your proxy.\n *\n * @param obj - Object to mark as tracked or not.\n * @param mark - Boolean indicating whether you want to track this object or not.\n * @returns No return.\n *\n * @example\n * import { createProxy, markToTrack, isChanged } from 'proxy-compare';\n *\n * const nested = { e: \"3\" }\n *\n * markToTrack(nested, false)\n *\n * const original = { a: \"1\", c: \"2\", d: nested };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.d.e\n *\n * isChanged(original, { d: { e: \"3\" } }, affected) // true\n */\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n// convert affected to path list\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n) => {\n  const list: (string | symbol)[][] = [];\n  const seen = new WeakSet();\n  const walk = (x: unknown, path?: (string | symbol)[]) => {\n    if (seen.has(x as object)) {\n      // for object with cycles\n      return;\n    }\n    if (isObject(x)) {\n      seen.add(x);\n    }\n    const used = isObject(x) && (affected as Affected).get(getOriginalObject(x));\n    if (used) {\n      used.forEach((key) => {\n        walk((x as any)[key], path ? [...path, key] : [key]);\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n\n/**\n * replace newProxy function.\n *\n * This can be used if you want to use proxy-polyfill.\n * Note that proxy-polyfill can't polyfill everything.\n * Use it at your own risk.\n */\nexport const replaceNewProxy = (fn: typeof newProxy) => {\n  newProxy = fn;\n};\n", "import { markToTrack, getUntracked } from 'proxy-compare';\n\nconst isObject = (x) => typeof x === \"object\" && x !== null;\nconst PROXY_STATE = Symbol();\nconst refSet = /* @__PURE__ */ new WeakSet();\nconst buildProxyFunction = (objectIs = Object.is, newProxy = (target, handler) => new Proxy(target, handler), canProxy = (x) => isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer), defaultHandlePromise = (promise) => {\n  switch (promise.status) {\n    case \"fulfilled\":\n      return promise.value;\n    case \"rejected\":\n      throw promise.reason;\n    default:\n      throw promise;\n  }\n}, snapCache = /* @__PURE__ */ new WeakMap(), createSnapshot = (target, receiver, version, handlePromise = defaultHandlePromise) => {\n  const cache = snapCache.get(receiver);\n  if ((cache == null ? void 0 : cache[0]) === version) {\n    return cache[1];\n  }\n  const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n  markToTrack(snap, true);\n  snapCache.set(receiver, [version, snap]);\n  Reflect.ownKeys(target).forEach((key) => {\n    const value = Reflect.get(target, key, receiver);\n    if (refSet.has(value)) {\n      markToTrack(value, false);\n      snap[key] = value;\n    } else if (value instanceof Promise) {\n      Object.defineProperty(snap, key, {\n        get() {\n          return handlePromise(value);\n        }\n      });\n    } else if (value == null ? void 0 : value[PROXY_STATE]) {\n      snap[key] = snapshot(value, handlePromise);\n    } else {\n      snap[key] = value;\n    }\n  });\n  return Object.freeze(snap);\n}, proxyCache = /* @__PURE__ */ new WeakMap(), versionHolder = [1], proxyFunction2 = (initialObject) => {\n  if (!isObject(initialObject)) {\n    throw new Error(\"object required\");\n  }\n  const found = proxyCache.get(initialObject);\n  if (found) {\n    return found;\n  }\n  let version = versionHolder[0];\n  const listeners = /* @__PURE__ */ new Set();\n  const notifyUpdate = (op, nextVersion = ++versionHolder[0]) => {\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(op, nextVersion));\n    }\n  };\n  const propListeners = /* @__PURE__ */ new Map();\n  const getPropListener = (prop) => {\n    let propListener = propListeners.get(prop);\n    if (!propListener) {\n      propListener = (op, nextVersion) => {\n        const newOp = [...op];\n        newOp[1] = [prop, ...newOp[1]];\n        notifyUpdate(newOp, nextVersion);\n      };\n      propListeners.set(prop, propListener);\n    }\n    return propListener;\n  };\n  const popPropListener = (prop) => {\n    const propListener = propListeners.get(prop);\n    propListeners.delete(prop);\n    return propListener;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const handler = {\n    get(target, prop, receiver) {\n      if (prop === PROXY_STATE) {\n        const state = [\n          target,\n          receiver,\n          version,\n          createSnapshot,\n          listeners\n        ];\n        return state;\n      }\n      return Reflect.get(target, prop, receiver);\n    },\n    deleteProperty(target, prop) {\n      var _a;\n      const prevValue = Reflect.get(target, prop);\n      const childListeners = (_a = prevValue == null ? void 0 : prevValue[PROXY_STATE]) == null ? void 0 : _a[4];\n      if (childListeners) {\n        childListeners.delete(popPropListener(prop));\n      }\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate([\"delete\", [prop], prevValue]);\n      }\n      return deleted;\n    },\n    set(target, prop, value, receiver) {\n      var _a, _b;\n      const hasPrevValue = Reflect.has(target, prop);\n      const prevValue = Reflect.get(target, prop, receiver);\n      if (hasPrevValue && objectIs(prevValue, value)) {\n        return true;\n      }\n      const childListeners = (_a = prevValue == null ? void 0 : prevValue[PROXY_STATE]) == null ? void 0 : _a[4];\n      if (childListeners) {\n        childListeners.delete(popPropListener(prop));\n      }\n      if (isObject(value)) {\n        value = getUntracked(value) || value;\n      }\n      let nextValue = value;\n      if ((_b = Object.getOwnPropertyDescriptor(target, prop)) == null ? void 0 : _b.set) ; else if (value instanceof Promise) {\n        value.then((v) => {\n          value.status = \"fulfilled\";\n          value.value = v;\n          notifyUpdate([\"resolve\", [prop], v]);\n        }).catch((e) => {\n          value.status = \"rejected\";\n          value.reason = e;\n          notifyUpdate([\"reject\", [prop], e]);\n        });\n      } else {\n        if (!(value == null ? void 0 : value[PROXY_STATE]) && canProxy(value)) {\n          nextValue = proxy(value);\n        }\n        if (nextValue == null ? void 0 : nextValue[PROXY_STATE]) {\n          nextValue[PROXY_STATE][4].add(\n            getPropListener(prop)\n          );\n        }\n      }\n      Reflect.set(target, prop, nextValue, receiver);\n      notifyUpdate([\"set\", [prop], value, prevValue]);\n      return true;\n    }\n  };\n  const proxyObject = newProxy(baseObject, handler);\n  proxyCache.set(initialObject, proxyObject);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(\n      initialObject,\n      key\n    );\n    if (desc.get || desc.set) {\n      Object.defineProperty(baseObject, key, desc);\n    } else {\n      proxyObject[key] = initialObject[key];\n    }\n  });\n  return proxyObject;\n}) => [\n  proxyFunction2,\n  PROXY_STATE,\n  refSet,\n  objectIs,\n  newProxy,\n  canProxy,\n  defaultHandlePromise,\n  snapCache,\n  createSnapshot,\n  proxyCache,\n  versionHolder\n];\nconst [proxyFunction] = buildProxyFunction();\nfunction proxy(initialObject = {}) {\n  return proxyFunction(initialObject);\n}\nfunction getVersion(proxyObject) {\n  const state = proxyObject == null ? void 0 : proxyObject[PROXY_STATE];\n  return state == null ? void 0 : state[2];\n}\nfunction subscribe(proxyObject, callback, notifyInSync) {\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !(proxyObject == null ? void 0 : proxyObject[PROXY_STATE])) {\n    console.warn(\"Please use proxy object\");\n  }\n  let promise;\n  const ops = [];\n  const listeners = proxyObject[PROXY_STATE][4];\n  const listener = (op) => {\n    ops.push(op);\n    if (notifyInSync) {\n      callback(ops.splice(0));\n      return;\n    }\n    if (!promise) {\n      promise = Promise.resolve().then(() => {\n        promise = void 0;\n        if (listeners.has(listener)) {\n          callback(ops.splice(0));\n        }\n      });\n    }\n  };\n  listeners.add(listener);\n  return () => listeners.delete(listener);\n}\nfunction snapshot(proxyObject, handlePromise) {\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !(proxyObject == null ? void 0 : proxyObject[PROXY_STATE])) {\n    console.warn(\"Please use proxy object\");\n  }\n  const [target, receiver, version, createSnapshot] = proxyObject[PROXY_STATE];\n  return createSnapshot(target, receiver, version, handlePromise);\n}\nfunction ref(obj) {\n  refSet.add(obj);\n  return obj;\n}\nconst unstable_buildProxyFunction = buildProxyFunction;\n\nexport { getVersion, proxy, ref, snapshot, subscribe, unstable_buildProxyFunction };\n", "import { proxy } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  selectedChainId: undefined,\n  chains: undefined,\n  standaloneChains: undefined,\n  standaloneUri: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  setChains(chains?: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setStandaloneChains(standaloneChains: OptionsCtrlState['standaloneChains']) {\n    state.standaloneChains = standaloneChains\n  },\n\n  setStandaloneUri(standaloneUri: OptionsCtrlState['standaloneUri']) {\n    state.standaloneUri = standaloneUri\n  },\n\n  setSelectedChainId(selectedChainId: OptionsCtrlState['selectedChainId']) {\n    state.selectedChainId = selectedChainId\n  }\n}\n", "import { proxy } from 'valtio/vanilla'\nimport type { ClientCtrlState } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ClientCtrlState>({\n  initialized: false,\n  ethereumClient: undefined\n})\n\n// -- controller -- As function to enable correct ssr handling\nexport const ClientCtrl = {\n  setEthereumClient(ethereumClient: ClientCtrlState['ethereumClient']) {\n    if (!state.initialized && ethereumClient) {\n      state.ethereumClient = ethereumClient\n      OptionsCtrl.setChains(ethereumClient.chains)\n      state.initialized = true\n    }\n  },\n\n  client() {\n    if (state.ethereumClient) return state.ethereumClient\n\n    throw new Error('ClientCtrl has no client set')\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState, ConfigOptions } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ConfigCtrlState>({\n  configured: false,\n  projectId: '',\n  theme: isDarkMode() ? 'dark' : 'light',\n  accentColor: 'default',\n  standaloneChains: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigOptions) {\n    if (!config.projectId)\n      throw new Error(\n        'Web3Modal requires projectId that can be obtained at cloud.walletconnect.com'\n      )\n\n    if (config.standaloneChains?.length) OptionsCtrl.setStandaloneChains(config.standaloneChains)\n    Object.assign(state, config)\n    state.configured = true\n  }\n}\n", "import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingResponse, PageParams } from '../types/controllerTypes'\n\nfunction formatParams(params: PageParams) {\n  const stringParams = Object.fromEntries(\n    Object.entries(params)\n      .filter(([_, value]) => typeof value !== 'undefined' && value !== null && value !== '')\n      .map(([key, value]) => [key, value.toString()])\n  )\n\n  return new URLSearchParams(stringParams).toString()\n}\n\nexport function getExplorerApi() {\n  return {\n    url: 'https://explorer-api.walletconnect.com',\n    projectId: ConfigCtrl.state.projectId\n  }\n}\n\nexport async function fetchWallets(params: PageParams): Promise<ListingResponse> {\n  const { url, projectId } = getExplorerApi()\n  const fetcUrl = `${url}/v3/wallets?projectId=${projectId}&${formatParams(params)}`\n  const fetched = await fetch(fetcUrl)\n\n  return fetched.json()\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, PageParams } from '../types/controllerTypes'\nimport { fetchWallets } from '../utils/ExplorerApi'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  previewWallets: [],\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  subscribe(callback: (newState: ExplorerCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async getPreviewWallets(params: PageParams) {\n    const { listings } = await fetchWallets(params)\n    state.previewWallets = Object.values(listings)\n\n    return state.previewWallets\n  },\n\n  async getRecomendedWallets() {\n    const { listings } = await fetchWallets({ page: 1, entries: 6 })\n    state.recomendedWallets = Object.values(listings)\n  },\n\n  async getPaginatedWallets(params: PageParams) {\n    const { page, search } = params\n    const { listings: listingsObj, total } = await fetchWallets(params)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) state.data = data\n      state.history.push(view)\n    }\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  open(options?: { uri: string; standaloneChains?: string[] }) {\n    const { chains } = OptionsCtrl.state\n    if (chains?.length ? chains.length > 1 : false) RouterCtrl.replace('SelectNetwork')\n    else RouterCtrl.replace('ConnectWallet')\n    if (typeof options?.uri === 'string') OptionsCtrl.setStandaloneUri(options.uri)\n    if (options?.standaloneChains?.length) OptionsCtrl.setStandaloneChains(options.standaloneChains)\n    state.open = true\n  },\n\n  close() {\n    state.open = false\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n", "export const WALLETCONNECT_DEEPLINK_CHOICE = 'WALLETCONNECT_DEEPLINK_CHOICE'\n", "import { WALLETCONNECT_DEEPLINK_CHOICE } from './CoreConstants'\n\nexport const CoreHelpers = {\n  isCoinbaseExtension() {\n    return window.coinbaseWalletExtension\n  },\n\n  isMobile() {\n    return Boolean(\n      window.matchMedia('(pointer:coarse)').matches ||\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n    )\n  },\n\n  isEmptyObject(value: unknown) {\n    return (\n      Object.getPrototypeOf(value) === Object.prototype &&\n      Object.getOwnPropertyNames(value).length === 0 &&\n      Object.getOwnPropertySymbols(value).length === 0\n    )\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string) {\n    const plainAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${plainAppUrl}://wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string) {\n    let plainAppUrl = appUrl\n    if (appUrl.endsWith('/')) plainAppUrl = appUrl.slice(0, -1)\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${plainAppUrl}/wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target = '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(WALLETCONNECT_DEEPLINK_CHOICE)\n  },\n\n  isNull<T>(value: T | null): value is null {\n    return value === null\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) window.Buffer = Buffer\n  if (!window.global) window.global = window\n  // @ts-expect-error minimal process\n  if (!window.process) window.process = { env: {} }\n}\n"],
  "mappings": "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",
  "names": ["OWN_KEYS_SYMBOL", "Symbol", "TRACK_MEMO_SYMBOL", "GET_ORIGINAL_SYMBOL", "getProto", "Object", "getPrototypeOf", "objectsToTrack", "WeakMap", "isObjectToTrack", "obj", "has", "get", "prototype", "Array", "getUntracked", "obj", "isObjectToTrack", "GET_ORIGINAL_SYMBOL", "markToTrack", "mark", "objectsToTrack", "set", "v", "e", "state", "proxy", "OptionsCtrl", "chains", "standaloneChains", "standaloneUri", "selectedChainId", "ClientCtrl", "ethereumClient", "isDarkMode", "ConfigCtrl", "callback", "valtioSub", "config", "_a", "formatParams", "params", "stringParams", "_", "value", "key", "getExplorerApi", "fetchWallets", "url", "projectId", "fetcUrl", "ExplorerCtrl", "listings", "page", "search", "listingsObj", "total", "type", "RouterCtrl", "view", "data", "last", "ModalCtrl", "options", "ToastCtrl", "message", "variant", "WALLETCONNECT_DEEPLINK_CHOICE", "CoreHelpers", "appUrl", "wcUri", "name", "plainAppUrl", "encodedWcUrl", "miliseconds", "resolve", "href", "target", "Buffer"]
}
